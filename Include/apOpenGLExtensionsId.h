//==================================================================================
// Copyright (c) 2016 , Advanced Micro Devices, Inc.  All rights reserved.
//
/// \author AMD Developer Tools Team
/// \file apOpenGLExtensionsId.h
///
//==================================================================================

//------------------------------ apOpenGLExtensionsId.h ------------------------------

#ifndef __APOPENGLEXTENSIONSID_H
#define __APOPENGLEXTENSIONSID_H

// Infra:
#include <AMDTBaseTools/Include/gtString.h>

// Local:
#include <AMDTAPIClasses/Include/apAPIClassesDLLBuild.h>


// OpenGL extensions ids:
enum apOpenGLExtensionsId
{
    AP_GL_ARB_color_buffer_float,
    AP_GL_ARB_compatibility,
    AP_GL_ARB_depth_buffer_float,
    AP_GL_ARB_depth_texture,
    AP_GL_ARB_draw_buffers,
    AP_GL_ARB_draw_instanced,
    AP_GL_ARB_fragment_program,
    AP_GL_ARB_fragment_program_shadow,
    AP_GL_ARB_fragment_shader,
    AP_GL_ARB_framebuffer_sRGB,
    AP_GL_ARB_geometry_shader4,
    AP_GL_ARB_half_float_pixel,
    AP_GL_ARB_half_float_vertex,
    AP_GL_ARB_instanced_arrays,
    AP_GL_ARB_map_buffer_range,
    AP_GL_ARB_matrix_palette,
    AP_GL_ARB_multisample,
    AP_GL_ARB_multitexture,
    AP_GL_ARB_occlusion_query,
    AP_GL_ARB_pixel_buffer_object,
    AP_GL_ARB_point_parameters,
    AP_GL_ARB_point_sprite,
    AP_GL_ARB_shader_objects,
    AP_GL_ARB_shading_language_100,
    AP_GL_ARB_shadow,
    AP_GL_ARB_shadow_ambient,
    AP_GL_ARB_texture_border_clamp,
    AP_GL_ARB_texture_buffer_object,
    AP_GL_ARB_texture_compression,
    AP_GL_ARB_texture_compression_rgtc,
    AP_GL_ARB_texture_cube_map,
    AP_GL_ARB_texture_env_add,
    AP_GL_ARB_texture_env_combine,
    AP_GL_ARB_texture_env_crossbar,
    AP_GL_ARB_texture_env_dot3,
    AP_GL_ARB_texture_float,
    AP_GL_ARB_texture_mirrored_repeat,
    AP_GL_ARB_texture_non_power_of_two,
    AP_GL_ARB_texture_rectangle,
    AP_GL_ARB_texture_rg,
    AP_GL_ARB_transpose_matrix,
    AP_GL_ARB_vertex_array_object,
    AP_GL_ARB_uniform_buffer_object,
    AP_GL_ARB_copy_buffer,
    AP_GL_ARB_depth_clamp,
    AP_GL_ARB_draw_elements_base_vertex,
    AP_GL_ARB_fragment_coord_conventions,
    AP_GL_ARB_provoking_vertex,
    AP_GL_ARB_seamless_cube_map,
    AP_GL_ARB_sync,
    AP_GL_ARB_texture_multisample,
    AP_GL_ARB_vertex_array_bgra,
    AP_GL_ARB_vertex_blend,
    AP_GL_ARB_vertex_buffer_object,
    AP_GL_ARB_vertex_program,
    AP_GL_ARB_vertex_shader,
    AP_GL_ARB_window_pos,
    AP_GL_ARB_debug_output,
    AP_GL_KHR_debug,
    AP_GL_ATI_draw_buffers,
    AP_GL_ATI_fragment_shader,
    AP_GL_ATI_text_fragment_shader,
    AP_GL_EXT_bgra,
    AP_GL_EXT_blend_logic_op,
    AP_GL_EXT_blend_minmax,
    AP_GL_EXT_blend_subtract,
    AP_GL_EXT_compiled_vertex_array,
    AP_GL_EXT_draw_instanced,
    AP_GL_EXT_texture_array,
    AP_GL_EXT_texture_buffer_object,
    AP_GL_EXT_framebuffer_object,
    AP_GL_EXT_framebuffer_blit,
    AP_GL_EXT_framebuffer_multisample,
    AP_GL_EXT_geometry_shader4,
    AP_GL_EXT_multi_draw_arrays,
    AP_GL_EXT_packed_pixels,
    AP_GL_EXT_stencil_two_side,
    AP_GL_EXT_texture,
    AP_GL_EXT_texture_shared_exponent,
    AP_GL_EXT_texture3D,
    AP_GL_EXT_vertex_shader,
    AP_GL_GREMEDY_string_marker,
    AP_GL_GREMEDY_frame_terminator,
    AP_GL_HP_occlusion_test,
    AP_GL_NV_fragment_program,
    AP_GL_NV_fragment_program_option,
    AP_GL_NV_fragment_program2,
    AP_GL_NV_geometry_shader4,
    AP_GL_NV_occlusion_query,
    AP_GL_NV_primitive_restart,
    AP_GL_NV_texgen_reflection,
    AP_GL_NV_texture_rectangle,
    AP_GL_NV_texture_shader,
    AP_GL_NV_texture_shader3,
    AP_GL_NV_vertex_program,
    AP_GL_NV_vertex_program1_1,
    AP_GL_NV_vertex_program2,
    AP_GL_NV_vertex_program2_option,
    AP_GL_NV_vertex_program3,
    AP_GL_NV_shader_buffer_load,
    AP_GL_NV_vertex_buffer_unified_memory,
    AP_GL_AMD_debug_output,
    AP_GL_AMDX_debug_output,
    AP_GL_SGIS_generate_mipmap,
    AP_GL_SGIS_texture_border_clamp,
    AP_GL_SGIS_texture_edge_clamp,
    AP_GL_SGIS_texture_lod,
    AP_GL_SGIS_texture_select,
    AP_GL_SGIX_depth_texture,
    AP_GL_SGIX_interlace,
    AP_GL_SGIX_shadow,
    AP_GL_SGIX_shadow_ambient,
    AP_WGL_ARB_create_context,
    AP_WGL_ARB_extensions_string,
    AP_WGL_ARB_framebuffer_sRGB,
    AP_WGL_ARB_make_current_read,
    AP_WGL_ARB_multisample,
    AP_WGL_ARB_pbuffer,
    AP_WGL_ARB_pixel_format,
    AP_WGL_ARB_pixel_format_float,
    AP_WGL_ARB_render_texture,
    AP_WGL_ARB_buffer_region,
    AP_WGL_EXT_swap_control,
    AP_WGL_I3D_genlock,
    AP_WGL_NV_gpu_affinity,
    AP_GLX_ARB_fbconfig_float,
    AP_GLX_ARB_create_context,
    AP_GLX_ARB_framebuffer_sRGB,
    AP_GLX_ARB_get_proc_address,
    AP_GLX_ARB_multisample,
    AP_GLX_SGI_video_sync,
    AP_GLX_SGIX_fbconfig,
    AP_GLX_SGIX_pbuffer,
    AP_GL_APPLE_aux_depth_stencil,
    AP_GL_APPLE_client_storage,
    AP_GL_APPLE_element_array,
    AP_GL_APPLE_fence,
    AP_GL_APPLE_float_pixels,
    AP_GL_APPLE_flush_buffer_range,
    AP_GL_APPLE_flush_render,
    AP_GL_APPLE_object_purgeable,
    AP_GL_APPLE_packed_pixels,
    AP_GL_APPLE_pixel_buffer,
    AP_GL_APPLE_specular_vector,
    AP_GL_APPLE_texture_range,
    AP_GL_APPLE_transform_hint,
    AP_GL_APPLE_vertex_array_object,
    AP_GL_APPLE_vertex_array_range,
    AP_GL_APPLE_vertex_program_evaluators,
    AP_GL_APPLE_ycbcr_422,
    AP_GL_ARB_framebuffer_object,
    AP_GL_EXT_direct_state_access,
    AP_GL_EXT_texture_integer,
    AP_GL_EXT_bindable_uniform,
    AP_AMOUNT_OF_SUPPORTED_OGL_EXTENSIONS,
};


AP_API bool apOpenGLExtensionsIdToString(apOpenGLExtensionsId extensionId, gtString& extensionString);
AP_API bool apIsOpenGLExtensionSupported(const char* oglExtensionsString, const char* oglExtensionName);


#endif //__APOPENGLEXTENSIONSID_H
